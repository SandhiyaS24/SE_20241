# This workflow will install Python dependencies, run tests and lint with a single version of Python but extendable to multiple versions.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Triad Triumph

on:
  push:
    branches: [ "main", "workflow-integration" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13.0-rc.1"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest coverage codecov

      - name: Run tests with coverage
        run: |
          pytest --cov=my_package --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
    - name: Lint with flake8
      run: |
        mkdir -p test-results/linter
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --select=E9,F63,F7 --show-source --statistics > test-results/linter/linter-results-${{matrix.python-version}}.txt
    - name: Upload Linter results 
      uses: actions/upload-artifact@v4
      with:
        name: Linter Results for ${{ matrix.python-version }}
        path: test-results/linter/linter-results-${{ matrix.python-version }}.txt
      if: ${{ always() }}
    - name: Test with pytest
      run: |
        pytest --junitxml=test-results/junit/junit-results-${{ matrix.python-version }}.xml
    - name: Upload Pytest results 
      uses: actions/upload-artifact@v4
      with:
        name: Pytest Results for ${{ matrix.python-version }}
        path: test-results/junit/junit-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}
      
